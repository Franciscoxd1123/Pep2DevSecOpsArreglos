pipeline {
    agent any
    tools {
        maven 'maven'
    }

    stages {
        stage('Checkout repository') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Franciscoxd1123/Pep2DevSecOpsArreglos']])
            }
        }

        stage('Build backend') {
            steps {
                script {
                    bat 'cd prestabanco-backend && mvnw clean install -DskipTests'
                }
            }
        }

        stage('Snyk SAST - Backend') {
            steps {
                script {
                    echo 'Running Snyk SAST analysis on backend code'
                    withCredentials([string(credentialsId: 'snyk-token-string', variable: 'SNYK_TOKEN')]) {
                        bat '''
                            set SNYK_TOKEN=%SNYK_TOKEN%
                            cd prestabanco-backend
                            REM Solo análisis de código (SAST)
                            C:\\Users\\kahao\\.jenkins\\tools\\io.snyk.jenkins.tools.SnykInstallation\\snyk_latest\\snyk-win.exe code test --severity-threshold=low || true
                        '''
                    }
                }
            }
        }
        
        stage('Snyk SAST Report - Backend') {
            steps {
                script {
                    echo 'Generating Snyk SAST HTML report for Backend'
                    withCredentials([string(credentialsId: 'snyk-token-string', variable: 'SNYK_TOKEN')]) {
                        bat '''
                            set SNYK_TOKEN=%SNYK_TOKEN%
                            cd prestabanco-backend
                            mkdir -p reports
                            REM Reporte de código (SAST)
                            C:\\Users\\kahao\\.jenkins\\tools\\io.snyk.jenkins.tools.SnykInstallation\\snyk_latest\\snyk-win.exe code test --json --severity-threshold=low > reports\\snyk-sast-output.json || true
                            npx snyk-to-html -i reports\\snyk-sast-output.json -o reports\\snyk-backend-sast-report.html || true
                        '''
                        archiveArtifacts artifacts: 'prestabanco-backend/reports/snyk-backend-sast-report.html', allowEmptyArchive: true
                    }
                }
            }
        }

        stage('Test backend') {
            steps {
                script {
                    bat 'cd prestabanco-backend && mvnw test'
                }
            }
        }

        stage('Push backend') {
            steps {
                script {
                    try {
                        bat 'docker build -t kahaozeng/prestabanco-backend:latest prestabanco-backend'
                        
                        withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                            bat 'docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%'
                            bat 'docker push kahaozeng/prestabanco-backend:latest'
                        }
                    } catch (Exception e) {
                        echo "Warning: Could not push Docker image. Continuing pipeline. Error: ${e.message}"
                    }
                }
            }
        }

        stage('Install frontend dependencies') {
            steps {
                script {
                    bat 'cd prestabanco-frontend && npm install'
                }
            }
        }

        stage('Snyk SAST - Frontend') {
            steps {
                script {
                    echo 'Running Snyk SAST analysis on frontend code'
                    withCredentials([string(credentialsId: 'snyk-token-string', variable: 'SNYK_TOKEN')]) {
                        bat '''
                            set SNYK_TOKEN=%SNYK_TOKEN%
                            cd prestabanco-frontend
                            REM Solo análisis de código (SAST)
                            C:\\Users\\kahao\\.jenkins\\tools\\io.snyk.jenkins.tools.SnykInstallation\\snyk_latest\\snyk-win.exe code test --severity-threshold=low || true
                        '''
                    }
                }
            }
        }
        
        stage('Snyk SAST Report - Frontend') {
            steps {
                script {
                    echo 'Generating Snyk SAST HTML report for Frontend'
                    withCredentials([string(credentialsId: 'snyk-token-string', variable: 'SNYK_TOKEN')]) {
                        bat '''
                            set SNYK_TOKEN=%SNYK_TOKEN%
                            cd prestabanco-frontend
                            mkdir -p reports
                            REM Reporte de código (SAST)
                            C:\\Users\\kahao\\.jenkins\\tools\\io.snyk.jenkins.tools.SnykInstallation\\snyk_latest\\snyk-win.exe code test --json --severity-threshold=low > reports\\snyk-sast-output.json || true
                            npx snyk-to-html -i reports\\snyk-sast-output.json -o reports\\snyk-frontend-sast-report.html || true
                        '''
                        archiveArtifacts artifacts: 'prestabanco-frontend/reports/snyk-frontend-sast-report.html', allowEmptyArchive: true
                    }
                }
            }
        }

        stage('Build frontend') {
            steps {
                script {
                    bat 'cd prestabanco-frontend && npm run build'
                }
            }
        }

        stage('Push frontend') {
            steps {
                script {
                    try {
                        bat 'docker build -t kahaozeng/prestabanco-frontend:latest prestabanco-frontend'
                    
                        withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                            bat 'docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%'
                            bat 'docker push kahaozeng/prestabanco-frontend:latest'
                        }
                    } catch (Exception e) {
                        echo "Warning: Could not push Docker image. Continuing pipeline. Error: ${e.message}"
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                script {
                    try {
                        bat 'dir'
                        bat 'docker-compose -f compose2.yml up -d'
                    } catch (Exception e) {
                        echo "Warning: Could not deploy with Docker Compose. Error: ${e.message}"
                    }
                }
            }
        }
    }
}